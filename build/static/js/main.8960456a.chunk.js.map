{"version":3,"sources":["components/formik/formikStyle.module.css","components/HomeComponent.tsx","objectModel/ProgramModel.ts","services/ProgramService.ts","components/program/ProgramListComponent.tsx","services/RequestService.ts","services/StageService.ts","components/request/RequestListComponent.tsx","objectModel/RequestModel.ts","components/request/RequestCreateComponent.tsx","components/stage/StageListComponent.tsx","NavBarFunc.tsx","components/volunteer/VolunteerFormData.tsx","components/formik/types.ts","components/formik/fieldComponents/CheckRadioFieldComponent.tsx","components/formik/fieldComponents/TextFieldComponent.tsx","components/formik/fieldComponents/FieldComponent.tsx","components/formik/FormikComponent.tsx","components/volunteer/VolunteerFormComponent.tsx","components/formik/FormSuccess.tsx","App.tsx","index.js","components/request/requestStyle.module.css","components/formik/FormSuccess.module.css"],"names":["module","exports","HomeComponent","location","pathname","ProgramModel","code","this","ProgramService","programs","localStorage","setItem","JSON","stringify","programsFromStorage","getItem","programsJson","parse","ProgramListComponent","ProgramLinks","useState","setPrograms","newProgramCode","setNewProgramCode","programCount","setProgramCount","forceUpdateCount","setForceUpdateCount","a","saveMany","useEffect","list","programData","count","getData","map","program","i","type","defaultValue","onChange","e","target","value","updateArrayRow","onClick","splice","length","deleteArrayRow","className","refreshNewProgramCode","push","RequestService","request","requestsFromStorage","emptyRequestJson","requestsJson","requests","StageService","stages","stagesFromStorage","stagesJson","RequestListComponent","setRequests","setStages","history","useHistory","useParams","programCode","stageCode","requestData","stageData","RequestLinks","StageButtons","stage","fontWeight","toUpperCase","to","style","padding","filter","requestObj","name","address","phone","email","RequestModel","zipcode","dob","reference","weakImuneSystem","chronicIllness","livingAlone","sickWithCovid","beneficiariesText","vaccination","wellnessCalls","groceryDelivery","cannedAndPackagedGoods","freezerOrRefrigeratedGoods","fruitsAndVegetables","dairyAndEggs","meat","bread","yougurtTeaOrCoffee","miscellaneous","GetSupport","date","Date","initialRequestState","checked","setRequestObj","handleInputChange","event","prop","handleCheckBoxInput","check","step","setStep","saveRequest","data","create","setSubmitted","isSubmitted","Style","getSupport","personalDetails","informationCategory","onSubmit","preventDefault","inputTitle","required","placeholder","zipcodeInput","toString","submit","WeakImmune","weakImmune","notWeakImmune","radioButtonsWrapper","activeRadioButton","radioButton","ChronicIll","chronicIll","notChronicIll","LivingCondition","notLivingAlone","SickWithCovid","sick","notSick","BeneficiariesText","BeneficiariesTextLabel","BeneficiariesTextInput","next","healthDetails","action","inactiveSubmit","HealthDetails","Vaccination","checkBoxDivs","WellnessCalls","GroceryDelivery","groceryOptionsInputs","title","class","input","GroceryOptions","readyToSubmit","marginBottom","ProgramDetails","DisplaySteps","Props","stepWrapper","screen","stepWrapperItem","activeItemStep","stepWrapperItemStep","activeItemTitle","stepWrapperItemTitle","StageListComponent","StageLinks","newStageCode","setNewStageCode","stageCount","setStageCount","stagesData","refreshNewStageCode","getNavBarHTML","mainMenuOptions","menuOption","link","implemented","menuText","YES_NO_OPTIONS","label","VOLUNTEER_FORM","id","formFields","shortStyle","options","VOLUNTEER_SCHEMA","Yup","shape","postal","matches","languages","offer","min","time","max","license","covid","contactedCovid","travelledCovid","VOLUNTEER_INITAL_VALUES","textFieldSet","Set","checkRadioFieldSet","CheckRadioFieldComponent","props","formField","requiredLabel","optionList","option","errorMessage","TextFieldComponent","shortInput","longInput","textInput","FieldComponent","has","FormikComponent","formSections","initialValues","schema","formikForm","validationSchema","values","setSubmitting","console","log","formSection","formFieldHeader","VolunteerFormComponent","form","FormSubmitted","body","p","box","checkmarkCircle","checkmark","App","NavBar","showAdminMenu","setShowAdmin","adminMenuHTML","mainnMenuHTML","NavBarFunc","exact","path","component","RequestCreateComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8960456a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formikForm\":\"formikStyle_formikForm__2-pPZ\",\"formFieldHeader\":\"formikStyle_formFieldHeader__1Uvj-\",\"formField\":\"formikStyle_formField__2Ro1Y\",\"requiredLabel\":\"formikStyle_requiredLabel__1L3Hw\",\"optionList\":\"formikStyle_optionList__3vtAJ\",\"option\":\"formikStyle_option__1IeD5\",\"longInput\":\"formikStyle_longInput__3AbbT\",\"shortInput\":\"formikStyle_shortInput__3OGn3\",\"errorMessage\":\"formikStyle_errorMessage__1thNk\",\"textInput\":\"formikStyle_textInput__1lazq\",\"submit\":\"formikStyle_submit__2mCv6\"};","import React from 'react';\n\n// eslint-disable-next-line func-names\nfunction HomeComponent({ location }: { location: any }) {\n  return (\n    <h1>\n      Content for\n      {`\"\n      ${location.pathname}\n      \"`}\n      TBD\n    </h1>\n  );\n}\n\nexport default HomeComponent;\n","export default class ProgramModel {\n  constructor(code: string) {\n    this.code = code;\n  }\n\n  code: string;\n}\n","import ProgramModel from '../objectModel/ProgramModel';\n\nclass ProgramService {\n  static async saveMany(programs: ProgramModel[]) {\n    // const requestOptions = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(programs),\n    // };\n    // fetch('http://localhost:8080/program/savemany', requestOptions).then(\n    //   res => {\n    //     return res.json();\n    //   },\n    // );\n    localStorage.setItem('programs', JSON.stringify(programs));\n  }\n\n  static async list() {\n    // const response = await fetch('http://localhost:8080/program/list'); // returns promise to get Programs\n    // const json = await response.json();\n    // return json.data;\n    const programsFromStorage = localStorage.getItem('programs') || '';\n    const programsJson = JSON.parse(programsFromStorage);\n    return programsJson;\n  }\n}\n\nexport default ProgramService;\n","import React, { useState, useEffect } from 'react';\nimport ProgramModel from '../../objectModel/ProgramModel';\nimport ProgramService from '../../services/ProgramService';\n\nfunction ProgramListComponent() {\n  const [programs, setPrograms] = useState([] as ProgramModel[]);\n  const [newProgramCode, setNewProgramCode] = useState('');\n  const [programCount, setProgramCount] = useState(0);\n  // forceUpdateCount used to update key of table row\n  // If key is not changed, even though value of input field changes, React only refreshes\n  // new rows or reduces number of rows, but does not update\n  const [forceUpdateCount, setForceUpdateCount] = useState(0);\n\n  useEffect(() => {\n    async function getData() {\n      const programData = await ProgramService.list();\n      setPrograms(programData);\n      setProgramCount(programData.count);\n    }\n    getData();\n  }, []);\n\n  function addProgramToArray() {\n    programs.push(new ProgramModel(newProgramCode));\n    setPrograms(programs);\n    setNewProgramCode('');\n    setProgramCount(programs.length);\n    setForceUpdateCount(forceUpdateCount + 1);\n  }\n\n  function deleteArrayRow(i: number) {\n    programs.splice(i, 1);\n    setPrograms(programs);\n    setProgramCount(programs.length);\n    setForceUpdateCount(forceUpdateCount + 1);\n  }\n\n  function refreshNewProgramCode(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewProgramCode(e.target.value);\n  }\n\n  function revertPrograms() {\n    async function getData() {\n      const programData = await ProgramService.list();\n      setPrograms(programData);\n      setProgramCount(programData.length);\n      setForceUpdateCount(forceUpdateCount + 1);\n    }\n    getData();\n  }\n\n  function updateArrayRow(e: React.ChangeEvent<HTMLInputElement>, i: number) {\n    programs[i].code = e.target.value;\n    setPrograms(programs);\n  }\n\n  async function savePrograms() {\n    await ProgramService.saveMany(programs);\n  }\n\n  let ProgramLinks = {};\n\n  ProgramLinks = programs.map((program, i) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <tr key={`item-${program.code}-${i}=${forceUpdateCount}`}>\n      <td>\n        <input\n          type=\"text\"\n          defaultValue={program.code}\n          onChange={(e) => updateArrayRow(e, i)}\n        />\n      </td>\n      <td>\n        <button type=\"button\" onClick={() => deleteArrayRow(i)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      <p>\n        Count:\n        {programCount}\n      </p>\n      <table className=\"\">\n        <thead>\n          <tr>\n            <th>Program</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{ProgramLinks}</tbody>\n      </table>\n      <hr />\n      <div>\n        <input\n          key={`addnewprogramvalue-${forceUpdateCount}`}\n          aria-label=\"Value for new program\"\n          type=\"text\"\n          defaultValue={newProgramCode}\n          onChange={(e) => refreshNewProgramCode(e)}\n        />\n        <button type=\"button\" onClick={addProgramToArray}>\n          Add Item\n        </button>\n      </div>\n      <br />\n      <button type=\"button\" onClick={savePrograms}>\n        Save\n      </button>\n      <button type=\"button\" onClick={revertPrograms}>\n        Revert\n      </button>\n    </div>\n  );\n}\n\nexport default ProgramListComponent;\n","import RequestModel from '../objectModel/RequestModel';\n\nclass RequestService {\n  static emptyRequestJson = '{ \"requests\": [] }';\n\n  static async create(request: RequestModel) {\n    const requestsFromStorage = localStorage.getItem('requests') || RequestService.emptyRequestJson;\n    const requestsJson = JSON.parse(requestsFromStorage);\n    requestsJson.requests.push(request);\n    localStorage.setItem('requests', JSON.stringify(requestsJson));\n  }\n\n  static async list() {\n    const requestsFromStorage = localStorage.getItem('requests') || RequestService.emptyRequestJson;\n    const requestsJson = JSON.parse(requestsFromStorage);\n    return requestsJson.requests;\n  }\n}\n\nexport default RequestService;\n","import StageModel from '../objectModel/StageModel';\n\nclass StageService {\n  // static async saveMany(stages: StageModel[]) {\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify({ stages }),\n  //   };\n  //   fetch('http://localhost:8080/stage/savemany', requestOptions).then(res => {\n  //     return res.json();\n  //   });\n  // }\n\n  // static async list() {\n  //   const fetchPromise = await fetch('http://localhost:8080/stage/list'); // returns promise to get Stages\n  //   const json = await fetchPromise.json();\n  //   return json.data;\n  // }\n\n  static async saveMany(stages: StageModel[]) {\n    // const requestOptions = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(programs),\n    // };\n    // fetch('http://localhost:8080/program/savemany', requestOptions).then(\n    //   res => {\n    //     return res.json();\n    //   },\n    // );\n    localStorage.setItem('stages', JSON.stringify(stages));\n  }\n\n  static async list() {\n    // const response = await fetch('http://localhost:8080/stage/list'); // returns promise to get stages\n    // const json = await response.json();\n    // return json.data;\n    const stagesFromStorage = localStorage.getItem('stages') || '';\n    const stagesJson = JSON.parse(stagesFromStorage);\n    return stagesJson;\n  }\n}\n\nexport default StageService;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport RequestModel from '../../objectModel/RequestModel';\nimport RequestService from '../../services/RequestService';\nimport StageService from '../../services/StageService';\nimport StageModel from '../../objectModel/StageModel';\n\nfunction RequestListComponent() {\n  const [requests, setRequests] = useState([] as RequestModel[]);\n  const [stages, setStages] = useState([] as StageModel[]);\n  const history = useHistory();\n  const { programCode, stageCode = 'Open' } = useParams<{ programCode: string; stageCode: string }>();\n\n  useEffect(() => {\n    async function getData() {\n      const requestData = await RequestService.list();\n      setRequests(requestData);\n      const stageData = await StageService.list();\n      setStages(stageData);\n    }\n    getData();\n  }, []);\n\n  let RequestLinks = {};\n  // // TODO: move styling to CSS or define at bottom\n  const StageButtons = stages.map((stage) => {\n    const fontWeight = stage.code.toUpperCase() === stageCode.toUpperCase() ? 'bold' : 'normal';\n    return (\n      <Link\n        key={`stage-${stage.code}`}\n        to={`/request/list/${programCode}/${stage.code}`}\n        style={{ padding: '0px 50px 0px 0px', fontWeight: `${fontWeight}` }}\n      >\n        {' '}\n        {stage.code}\n      </Link>\n    );\n  });\n  RequestLinks = requests\n    .filter((request) => request.programCode === programCode.toUpperCase())\n    .map((requestObj, i) => (\n      <tr key={`requestrow-${requestObj.name}-${i}`}>\n        <td>{requestObj.name}</td>\n        <td>{requestObj.address}</td>\n        <td>{requestObj.phone}</td>\n        <td>{requestObj.email}</td>\n        <td>\n          <button>Email Blast</button>\n        </td>\n      </tr>\n    ));\n\n  function addRequest() {\n    history.push('/request/create');\n  }\n\n  // TODO: move styling to CSS file\n  return (\n    <div>\n      <button onClick={addRequest}>Add</button>\n      <p>\n        Program:\n        {programCode}\n      </p>\n      <div style={{ padding: '20px 0px' }}>{StageButtons}</div>\n\n      <table className=\"\">\n        <thead>\n          <tr>\n            <th>Target Date</th>\n            <th>Flexible Date</th>\n            <th>Submitted Date</th>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>{RequestLinks}</tbody>\n      </table>\n      <hr />\n      <br />\n    </div>\n  );\n}\n\nexport default RequestListComponent;\n","export default class RequestModel {\n  // TODO: make real program code\n  programCode: string;\n\n  // allows to access attribute using brackets, e.g. request['address']\n  // [index: string]: any;\n  // 1- personal properties\n  name: string;\n\n  address: string;\n\n  zipcode: string;\n\n  email: string;\n\n  phone: string;\n\n  dob: Date; // date of birth\n\n  reference: string; // how did you hear about us?\n\n  // 2- health details properties\n  weakImuneSystem: string; // Do you have weakened Immune System?\n\n  chronicIllness: string; // Do you have Chronic Illness?\n\n  livingAlone: string; // Do you live alone with limited support network?\n\n  sickWithCovid: string; // Are you currently sick or with Covid-19 symptoms?\n\n  beneficiariesText: string;\n\n  // 3- program details\n  vaccination: boolean;\n\n  wellnessCalls: boolean;\n\n  groceryDelivery: boolean;\n\n  cannedAndPackagedGoods: { checked: boolean; value: string };\n\n  freezerOrRefrigeratedGoods: { checked: boolean; value: string };\n\n  fruitsAndVegetables: { checked: boolean; value: string };\n\n  dairyAndEggs: { checked: boolean; value: string };\n\n  meat: { checked: boolean; value: string };\n\n  bread: { checked: boolean; value: string };\n\n  yougurtTeaOrCoffee: { checked: boolean; value: string };\n\n  miscellaneous: string;\n\n  // constructor methode\n  constructor(request: {\n    programCode: string;\n\n    name: string;\n    address: string;\n    zipcode: string; // zip code can contain letters\n    email: string;\n    phone: string;\n    dob: Date; // date of birth\n    reference: string; // how did you hear about us?\n\n    // health details properties\n    weakImuneSystem: string;\n    chronicIllness: string;\n    livingAlone: string;\n    sickWithCovid: string;\n    beneficiariesText: string;\n\n    // program details\n    vaccination: boolean;\n    wellnessCalls: boolean;\n    groceryDelivery: boolean;\n\n    cannedAndPackagedGoods: { checked: boolean; value: string };\n    freezerOrRefrigeratedGoods: { checked: boolean; value: string };\n    fruitsAndVegetables: { checked: boolean; value: string };\n    dairyAndEggs: { checked: boolean; value: string };\n    meat: { checked: boolean; value: string };\n    bread: { checked: boolean; value: string };\n    yougurtTeaOrCoffee: { checked: boolean; value: string };\n    miscellaneous: string;\n  }) {\n    this.programCode = request.programCode;\n\n    this.name = request.name;\n    this.address = request.address;\n    this.zipcode = request.zipcode;\n    this.email = request.email;\n    this.phone = request.phone;\n    this.dob = request.dob; // date of birth\n    this.reference = request.reference;\n\n    // health details properties\n    this.weakImuneSystem = request.weakImuneSystem;\n    this.chronicIllness = request.chronicIllness;\n    this.livingAlone = request.livingAlone;\n    this.sickWithCovid = request.sickWithCovid;\n    this.beneficiariesText = request.beneficiariesText;\n\n    // program details\n    this.vaccination = request.vaccination;\n    this.wellnessCalls = request.wellnessCalls;\n    this.groceryDelivery = request.groceryDelivery;\n\n    this.cannedAndPackagedGoods = request.cannedAndPackagedGoods;\n    this.freezerOrRefrigeratedGoods = request.freezerOrRefrigeratedGoods;\n    this.fruitsAndVegetables = request.fruitsAndVegetables;\n    this.dairyAndEggs = request.dairyAndEggs;\n    this.meat = request.meat;\n    this.bread = request.bread;\n    this.yougurtTeaOrCoffee = request.yougurtTeaOrCoffee;\n    this.miscellaneous = request.miscellaneous;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable react/no-unstable-nested-components */\n/**\n* @description: this component will return a form of inputs for making requests\n                for getting support.\n* @author: Neck\n* @version: 0.1.0\n* @since: July 26, 2021\n*/\n\nimport React, { useState } from 'react';\nimport Style from './requestStyle.module.css';\nimport RequestModel from '../../objectModel/RequestModel';\nimport RequestService from '../../services/RequestService';\n// import { useHistory } from \"react-router-dom\";\n\n// Get suport\nexport default function GetSupport() {\n  // const history = useHistory();\n  const date: Date = new Date();\n  const initialRequestState: RequestModel = new RequestModel({\n    programCode: '',\n\n    name: '',\n    address: '',\n    zipcode: '',\n    email: '',\n    phone: '',\n    dob: date,\n    reference: '',\n\n    // Health details\n    weakImuneSystem: '', // Do you have weakened Immune System?\n    chronicIllness: '', // Do you have Chronic Illness?\n    livingAlone: '', // Do you live alone with limited support network?\n    sickWithCovid: '', // Are you currently sick or with Covid-19 symptoms?\n    beneficiariesText: '',\n\n    // program details\n    vaccination: false,\n    wellnessCalls: false,\n    groceryDelivery: false,\n\n    cannedAndPackagedGoods: { checked: false, value: '' },\n    freezerOrRefrigeratedGoods: { checked: false, value: '' },\n    fruitsAndVegetables: { checked: false, value: '' },\n    dairyAndEggs: { checked: false, value: '' },\n    meat: { checked: false, value: '' },\n    bread: { checked: false, value: '' },\n    yougurtTeaOrCoffee: { checked: false, value: '' },\n\n    miscellaneous: '',\n  });\n\n  const [requestObj, setRequestObj] = useState(initialRequestState);\n  // const [submitted, setSubmitted] = useState(false);\n\n  // text inputs handler\n  const handleInputChange = (event: {\n    target: { name: string; value: string };\n  }) => {\n    const { name, value } = event.target;\n\n    if (\n      name === 'cannedAndPackagedGoods'\n      || name === 'freezerOrRefrigeratedGoods'\n      || name === 'fruitsAndVegetables'\n      || name === 'dairyAndEggs'\n      || name === 'meat'\n      || name === 'bread'\n      || name === 'yougurtTeaOrCoffee'\n    ) {\n      const prop = requestObj[name];\n      setRequestObj({ ...requestObj, [name]: { ...prop, value } });\n    } else {\n      setRequestObj({ ...requestObj, [name]: value });\n    }\n  };\n\n  // checkbox handler\n  const handleCheckBoxInput = (event: { target: { name: string } }) => {\n    const { name } = event.target;\n    if (\n      name === 'vaccination'\n      || name === 'wellnessCalls'\n      || name === 'groceryDelivery'\n    ) {\n      const check = !requestObj[name];\n      setRequestObj({ ...requestObj, [name]: check });\n    } else {\n      const check = !(\n        requestObj[name as keyof RequestModel] as {\n          checked: boolean;\n          value: string;\n        }\n      ).checked;\n      const prop = requestObj[name as keyof RequestModel];\n      setRequestObj({\n        ...requestObj,\n        [name]: {\n          ...(prop as { checked: boolean; value: string }),\n          checked: check,\n        },\n      });\n    }\n  };\n\n  // step1: Personal Details, step2: Health Details, step3: Program Details, step4: submit\n  const [step, setStep] = useState(0);\n\n  /**\n   * Personal Details (Screen One)\n   * @returns\n   */\n  // eslint-disable-next-line react/no-unstable-nested-components\n  function PersonalDetails() {\n    return (\n      <div className={Style.personalDetails}>\n        <h2 className={Style.informationCategory}>Personal Details</h2>\n        {/* personal details inputs */}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            setStep(step + 1);\n          }}\n        >\n          {/* name */}\n          <label>\n            <span className={Style.inputTitle}>Full Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={requestObj.name}\n              required\n              placeholder=\"Full Name\"\n              onChange={(e) => handleInputChange(e)}\n            />\n          </label>\n\n          {/* Address */}\n          <label>\n            <span className={Style.inputTitle}>Address</span>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={requestObj.address}\n              required\n              placeholder=\"Appartment/Building Name\"\n              onChange={(e) => handleInputChange(e)}\n            />\n          </label>\n\n          {/* Zipcode */}\n          <label>\n            <span className={Style.inputTitle}>Zipcode</span>\n            <input\n              type=\"text\"\n              value={requestObj.zipcode}\n              name=\"zipcode\"\n              required\n              placeholder=\"Zipcode\"\n              onChange={(e) => handleInputChange(e)}\n              className={Style.zipcodeInput}\n            />\n          </label>\n\n          {/* Email */}\n          <label>\n            <span className={Style.inputTitle}>Email</span>\n            <input\n              type=\"email\"\n              required\n              placeholder=\"Email\"\n              value={requestObj.email}\n              name=\"email\"\n              onChange={(e) => handleInputChange(e)}\n            />\n          </label>\n\n          {/* phone */}\n          <label>\n            <span className={Style.inputTitle}>Phone Number</span>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Phone Number\"\n              value={requestObj.phone}\n              name=\"phone\"\n              onChange={(e) => handleInputChange(e)}\n            />\n          </label>\n\n          {/* Date of Birth */}\n          <label>\n            <span className={Style.inputTitle}>Date of Birth</span>\n            <input\n              type=\"date\"\n              required\n              placeholder=\"Birthday\"\n              value={requestObj.dob.toString()}\n              name=\"dob\"\n              onChange={(e) => handleInputChange(e)}\n            />\n          </label>\n\n          {/* How Did you hear about us? */}\n          <label>\n            <span className={Style.inputTitle}>How Did you hear about us?</span>\n            <select\n              name=\"reference\"\n              value={requestObj.reference}\n              onChange={(e) => handleInputChange(e)}\n            >\n              <option />\n              <option value=\"place one\">place one</option>\n              <option value=\"place two\">place two</option>\n              <option value=\"place three\">place three</option>\n            </select>\n          </label>\n\n          {/* next button */}\n          <input type=\"submit\" value=\"Next\" className={Style.submit} />\n        </form>\n      </div>\n    );\n  }\n\n  /**\n   * Health Details (Screen Two)\n   * @returns\n   */\n  function HealthDetails() {\n    // 1- immune system\n    function WeakImmune() {\n      const weakImmune = requestObj.weakImuneSystem === 'yes';\n      const notWeakImmune = requestObj.weakImuneSystem === 'no';\n      return (\n        <div>\n          <span className={Style.inputTitle}>\n            Do you have weakened Immune System?\n          </span>\n          <div className={Style.radioButtonsWrapper}>\n            <label>\n              <div\n                className={\n                  weakImmune ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, weakImuneSystem: 'yes' })}\n              />\n              <span>Yes</span>\n            </label>\n            <label>\n              <div\n                className={\n                  notWeakImmune ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, weakImuneSystem: 'no' })}\n              />\n              <span>No</span>\n            </label>\n          </div>\n        </div>\n      );\n    }\n\n    // 2- Chronic Ill\n    function ChronicIll() {\n      const chronicIll = requestObj.chronicIllness === 'yes';\n      const notChronicIll = requestObj.chronicIllness === 'no';\n      return (\n        <div>\n          <span className={Style.inputTitle}>Do you have Chronic Illness?</span>\n          <div className={Style.radioButtonsWrapper}>\n            <label>\n              <div\n                className={\n                  chronicIll ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, chronicIllness: 'yes' })}\n              />\n              <span>Yes</span>\n            </label>\n            <label>\n              <div\n                className={\n                  notChronicIll ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, chronicIllness: 'no' })}\n              />\n              <span>No</span>\n            </label>\n          </div>\n        </div>\n      );\n    }\n\n    // 3- Do you live alone with limited support network?\n    function LivingCondition() {\n      const livingAlone = requestObj.livingAlone === 'yes';\n      const notLivingAlone = requestObj.livingAlone === 'no';\n      return (\n        <div>\n          <span className={Style.inputTitle}>\n            Do you live alone with limited support network?\n          </span>\n          <div className={Style.radioButtonsWrapper}>\n            <label>\n              <div\n                className={\n                  livingAlone ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, livingAlone: 'yes' })}\n              />\n              <span>Yes</span>\n            </label>\n            <label>\n              <div\n                className={\n                  notLivingAlone ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, livingAlone: 'no' })}\n              />\n              <span>No</span>\n            </label>\n          </div>\n        </div>\n      );\n    }\n\n    // 4- Are you currently sick or with Covid-19 symptoms?\n    function SickWithCovid() {\n      const sick = requestObj.sickWithCovid === 'yes';\n      const notSick = requestObj.sickWithCovid === 'no';\n      return (\n        <div>\n          <span className={Style.inputTitle}>\n            Are you currently sick or with Covid-19 symptoms?\n          </span>\n          <div className={Style.radioButtonsWrapper}>\n            <label>\n              <div\n                className={sick ? Style.activeRadioButton : Style.radioButton}\n                onClick={() => setRequestObj({ ...requestObj, sickWithCovid: 'yes' })}\n              />\n              <span>Yes</span>\n            </label>\n            <label>\n              <div\n                className={\n                  notSick ? Style.activeRadioButton : Style.radioButton\n                }\n                onClick={() => setRequestObj({ ...requestObj, sickWithCovid: 'no' })}\n              />\n              <span>No</span>\n            </label>\n          </div>\n        </div>\n      );\n    }\n\n    function BeneficiariesText() {\n      return (\n        <div>\n          <label className={Style.BeneficiariesTextLabel}>\n            <span className={Style.inputTitle}>\n              If you would like to explain your situation, or would like to\n              share more details, please write it here.\n            </span>\n            <input\n              type=\"text\"\n              name=\"beneficiariesText\"\n              value={requestObj.beneficiariesText}\n              placeholder=\"Miscellaneous\"\n              className={Style.BeneficiariesTextInput}\n              onChange={(e) => handleInputChange(e)}\n            />\n          </label>\n        </div>\n      );\n    }\n    const next = requestObj.weakImuneSystem !== ''\n      && requestObj.chronicIllness !== ''\n      && requestObj.livingAlone !== ''\n      && requestObj.sickWithCovid !== '';\n    return (\n      <div className={Style.healthDetails}>\n        <h2 className={Style.informationCategory}>Health Details</h2>\n        <form\n          action=\"\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            if (next) {\n              setStep(step + 1);\n            }\n          }}\n        >\n          <WeakImmune />\n          <ChronicIll />\n          <LivingCondition />\n          <SickWithCovid />\n          <BeneficiariesText />\n          <input\n            type=\"submit\"\n            value=\"Next\"\n            className={next ? Style.submit : Style.inactiveSubmit}\n          />\n        </form>\n      </div>\n    );\n  }\n\n  /**\n   * program Details (Screen Three)\n   * @returns\n   */\n  function ProgramDetails() {\n    // 1- immune system\n    function Vaccination() {\n      return (\n        <div className={Style.checkBoxDivs}>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"vaccination\"\n              checked={requestObj.vaccination}\n              onChange={(e) => handleCheckBoxInput(e)}\n            />\n            <span>Vaccination</span>\n          </label>\n        </div>\n      );\n    }\n    // 2- Wellness Calls\n    function WellnessCalls() {\n      return (\n        <div className={Style.checkBoxDivs}>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"wellnessCalls\"\n              checked={requestObj.wellnessCalls}\n              onChange={(e) => handleCheckBoxInput(e)}\n            />\n            <span>Wellness Calls</span>\n          </label>\n        </div>\n      );\n    }\n    // 3- Grocery Delivery\n    function GroceryDelivery() {\n      return (\n        <div className={Style.checkBoxDivs}>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"groceryDelivery\"\n              checked={requestObj.groceryDelivery}\n              onChange={(e) => handleCheckBoxInput(e)}\n            />\n            <span>Grocery Delivery</span>\n          </label>\n        </div>\n      );\n    }\n\n    const groceryOptionsInputs = [\n      [\n        { title: 'Canned and packaged goods' },\n        {\n          type: 'checkbox',\n          name: 'cannedAndPackagedGoods',\n          checked: requestObj.cannedAndPackagedGoods.checked,\n        },\n        {\n          type: 'text',\n          name: 'cannedAndPackagedGoods',\n          value: requestObj.cannedAndPackagedGoods.value,\n          placeholder: 'Canned and packaged goods',\n          class: Style.input,\n        },\n      ],\n      [\n        { title: 'Freezer/Refrigerated goods' },\n        {\n          type: 'checkbox',\n          name: 'freezerOrRefrigeratedGoods',\n          checked: requestObj.freezerOrRefrigeratedGoods.checked,\n        },\n        {\n          type: 'text',\n          name: 'freezerOrRefrigeratedGoods',\n          value: requestObj.freezerOrRefrigeratedGoods.value,\n          placeholder: 'Freezer/Refrigerated goods',\n          class: Style.input,\n        },\n      ],\n      [\n        { title: 'Fruits and vegetables' },\n        {\n          type: 'checkbox',\n          name: 'fruitsAndVegetables',\n          checked: requestObj.fruitsAndVegetables.checked,\n        },\n        {\n          type: 'text',\n          name: 'fruitsAndVegetables',\n          value: requestObj.fruitsAndVegetables.value,\n          placeholder: 'Fruits and vegetables',\n          class: Style.input,\n        },\n      ],\n      [\n        { title: 'Dairy and eggs' },\n        {\n          type: 'checkbox',\n          name: 'dairyAndEggs',\n          checked: requestObj.dairyAndEggs.checked,\n        },\n        {\n          type: 'text',\n          name: 'dairyAndEggs',\n          value: requestObj.dairyAndEggs.value,\n          placeholder: 'Dairy and eggs',\n          class: Style.input,\n        },\n      ],\n      [\n        { title: 'Meat' },\n        { type: 'checkbox', name: 'meat', checked: requestObj.meat.checked },\n        {\n          type: 'text',\n          name: 'meat',\n          value: requestObj.meat.value,\n          placeholder: 'Meat',\n          class: Style.input,\n        },\n      ],\n      [\n        { title: 'Bread' },\n        { type: 'checkbox', name: 'bread', checked: requestObj.bread.checked },\n        {\n          type: 'text',\n          name: 'bread',\n          value: requestObj.bread.value,\n          placeholder: 'Bread',\n          class: Style.input,\n        },\n      ],\n      [\n        { title: 'Yougurt, Tea, Coffee' },\n        {\n          type: 'checkbox',\n          name: 'yougurtTeaOrCoffee',\n          checked: requestObj.yougurtTeaOrCoffee.checked,\n        },\n        {\n          type: 'text',\n          name: 'yougurtTeaOrCoffee',\n          value: requestObj.yougurtTeaOrCoffee.value,\n          placeholder: 'Yougurt, Tea, Coffee',\n          class: Style.input,\n        },\n      ],\n    ];\n    // 4- Grocery Options\n    function GroceryOptions() {\n      return (\n        <div>\n          <p className={Style.inputTitle}>Grocery delivery</p>\n          {groceryOptionsInputs.map((input) => (\n            <div className={Style.checkBoxDivs}>\n              <label>\n                <input\n                  type={input[1].type}\n                  name={input[1].name}\n                  checked={input[1].checked}\n                  onChange={(e) => handleCheckBoxInput(e)}\n                />\n                <span>{input[0].title}</span>\n              </label>\n              {input[1].checked ? (\n                <input\n                  type={input[2].type}\n                  placeholder={input[2].placeholder}\n                  value={input[2].value}\n                  name={input[2].name}\n                  className={input[2].class}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              ) : null}\n            </div>\n          ))}\n          {/* H- miscellaneous */}\n          <label className={Style.BeneficiariesTextLabel}>\n            <span className={Style.inputTitle}>Miscellaneous</span>\n            <input\n              type=\"text\"\n              name=\"miscellaneous\"\n              value={requestObj.miscellaneous}\n              placeholder=\"Miscellaneous\"\n              className={Style.BeneficiariesTextInput}\n              onChange={(e) => handleCheckBoxInput(e)}\n            />\n          </label>\n        </div>\n      );\n    }\n    const readyToSubmit = requestObj.vaccination\n      || requestObj.wellnessCalls\n      || (requestObj.groceryDelivery\n        && (requestObj.cannedAndPackagedGoods\n          || requestObj.freezerOrRefrigeratedGoods\n          || requestObj.fruitsAndVegetables\n          || requestObj.dairyAndEggs\n          || requestObj.meat\n          || requestObj.bread\n          || requestObj.yougurtTeaOrCoffee));\n    return (\n      <div>\n        <h2 className={Style.informationCategory}>Program Details</h2>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            if (readyToSubmit) setStep(step + 1);\n          }}\n        >\n          <div style={{ marginBottom: '13px' }}>\n            <span className={Style.inputTitle}>\n              What type of help do you need?\n            </span>\n          </div>\n          <Vaccination />\n          <WellnessCalls />\n          <GroceryDelivery />\n          {requestObj.groceryDelivery ? <GroceryOptions /> : null}\n\n          {/* next button */}\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className={readyToSubmit ? Style.submit : Style.inactiveSubmit}\n          />\n        </form>\n      </div>\n    );\n  }\n\n  const saveRequest = async () => {\n    const data: RequestModel = requestObj;\n    await RequestService.create(data);\n    setSubmitted(true);\n    // history.push(\"/request/list\")\n  };\n  /**\n   * submit request\n   * @returns\n   */\n  const [isSubmitted, setSubmitted] = useState(false);\n  function SubmitRequest() {\n    saveRequest();\n    return (\n      <div>\n        <h2 className={Style.informationCategory}>\n          {isSubmitted ? 'Request Sent' : 'Sending Request...'}\n        </h2>\n      </div>\n    );\n  }\n\n  // return\n  return (\n    <div className={Style.getSupport}>\n      {step === 0\n        ? PersonalDetails()\n        : step === 1\n          ? HealthDetails()\n          : step === 2\n            ? ProgramDetails()\n            : step === 3\n              ? SubmitRequest()\n              : null}\n      {step === 0 || step === 1 || step === 2 ? (\n        <DisplaySteps step={step} />\n      ) : null}\n    </div>\n  );\n}\n\n/**\n * This function is a functioanl component for displaying Beneficiaries\n * request steps at the bottom of the REQUEST FORM as he goes through screens\n * @param Props\n * @version 0.1.0\n * @since August 02, 2021\n * @author Neck Ab\n */\nfunction DisplaySteps(Props: any) {\n  const screens = [\n    { step: 0, title: 'Personal Details' },\n    { step: 1, title: 'Health Details' },\n    { step: 2, title: 'Program Details' },\n  ];\n\n  return (\n    <div className={Style.stepWrapper}>\n      {screens.map((screen) => (\n        <div className={Style.stepWrapperItem}>\n          <div\n            className={\n              screen.step === Props.step\n                ? Style.activeItemStep\n                : Style.stepWrapperItemStep\n            }\n          >\n            {screen.step + 1}\n          </div>\n          <div\n            className={\n              screen.step === Props.step\n                ? Style.activeItemTitle\n                : Style.stepWrapperItemTitle\n            }\n          >\n            {screen.title}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/button-has-type */\nimport React, { useState, useEffect } from 'react';\nimport StageService from '../../services/StageService';\nimport StageModel from '../../objectModel/StageModel';\n\nfunction StageListComponent() {\n  const [stages, setStages] = useState([] as StageModel[]);\n  const [newStageCode, setNewStageCode] = useState('');\n  const [stageCount, setStageCount] = useState(0);\n  // forceUpdateCount used to update key of table row\n  // If key is not changed, even though value of input field changes, React only refreshes\n  // new rows or reduces number of rows, but does not update\n  const [forceUpdateCount, setForceUpdateCount] = useState(0);\n\n  useEffect(() => {\n    async function getData() {\n      const stagesData = await StageService.list();\n      setStages(stagesData);\n      setStageCount(stagesData.length);\n    }\n    getData();\n  }, []);\n\n  let StageLinks = {};\n\n  StageLinks = stages.map((stage, i) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <tr key={`item-${stage.code}-${i}=${forceUpdateCount}`}>\n      <td>\n        <input\n          type=\"text\"\n          defaultValue={stage.code}\n          onChange={(e) => updateArrayRow(e, i)}\n        />\n      </td>\n      <td>\n        <button onClick={() => deleteArrayRow(i)}>Delete</button>\n      </td>\n    </tr>\n  ));\n  // }\n\n  function addStageToArray() {\n    stages.push({ code: newStageCode });\n    setStages(stages);\n    setNewStageCode('');\n    setStageCount(stages.length);\n    setForceUpdateCount(forceUpdateCount + 1);\n  }\n\n  function deleteArrayRow(i: number) {\n    stages.splice(i, 1);\n    setStages(stages);\n    setStageCount(stages.length);\n    setForceUpdateCount(forceUpdateCount + 1);\n  }\n\n  function refreshNewStageCode(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewStageCode(e.target.value);\n  }\n\n  function revertStages() {\n    async function getData() {\n      const stageData = await StageService.list();\n      setStages(stageData);\n      setStageCount(stageData.length);\n      setForceUpdateCount(forceUpdateCount + 1);\n    }\n    getData();\n  }\n\n  function updateArrayRow(e: React.ChangeEvent<HTMLInputElement>, i: number) {\n    stages[i].code = e.target.value;\n    setStages(stages);\n  }\n\n  async function saveStages() {\n    await StageService.saveMany(stages);\n  }\n\n  return (\n    <div>\n      <p>\n        Count:\n        {' '}\n        {stageCount}\n      </p>\n      <table className=\"\">\n        <thead>\n          <tr>\n            <th>Stage</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{StageLinks}</tbody>\n      </table>\n      <hr />\n      <div>\n        <input\n          key={`addnewstagevalue-${forceUpdateCount}`}\n          aria-label=\"Value for new stage\"\n          type=\"text\"\n          defaultValue={newStageCode}\n          onChange={(e) => refreshNewStageCode(e)}\n        />\n        <button onClick={addStageToArray}>Add Item</button>\n      </div>\n      <br />\n      <button onClick={saveStages}>Save</button>\n      <button onClick={revertStages}>Revert</button>\n    </div>\n  );\n}\n\nexport default StageListComponent;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction getNavBarHTML(\n  mainMenuOptions: { link: string; menuText: string; implemented: boolean }[],\n) {\n  return mainMenuOptions.map((menuOption) => (\n    <Link\n      to={menuOption.link}\n      key={menuOption.menuText}\n      className={`nav-link ${menuOption.implemented ? '' : 'tbd-font'}`}\n    >\n      {menuOption.menuText}\n    </Link>\n  ));\n}\n\nexport default function NavBarFunc() {\n  const [showAdminMenu, setShowAdmin] = useState(false);\n  const adminMenuOptions = [\n    { link: '/program/list', menuText: 'Programs', implemented: true },\n    { link: '/stage/list', menuText: 'Stages', implemented: true },\n    { link: '/email/list', menuText: 'Email Templates', implemented: false },\n    { link: '/text/list', menuText: 'Text Templates', implemented: false },\n    { link: '/question/list', menuText: 'Questions', implemented: false },\n  ];\n  const mainMenuOptions = [\n    { link: '/request/list', menuText: 'Requests', implemented: true },\n    { link: '/volunteer/list', menuText: 'Volunteers', implemented: false },\n    {\n      link: '/beneficiaries/list',\n      menuText: 'Beneficiaries',\n      implemented: false,\n    },\n  ];\n  const adminMenuHTML = getNavBarHTML(adminMenuOptions);\n  const mainnMenuHTML = getNavBarHTML(mainMenuOptions);\n\n  function NavBar() {\n    return <div />;\n  }\n  let NavBar2;\n  if (showAdminMenu) {\n    NavBar2 = () => (\n      <>\n        <Link to=\"/\" className=\"nav-link\">\n          <span onClick={() => setShowAdmin(false)}>Home</span>\n        </Link>\n        {adminMenuHTML}\n      </>\n    );\n  } else {\n    NavBar2 = () => (\n      <div>\n        <Link to=\"/admin\" className=\"nav-link\">\n          <span onClick={() => setShowAdmin(true)}>Admin</span>\n        </Link>\n        {mainnMenuHTML}\n      </div>\n    );\n  }\n  return NavBar2;\n}\n","import * as Yup from 'yup';\nimport { FieldOption, FormField, FormSection } from '../formik/types';\n\nconst YES_NO_OPTIONS: FieldOption[] = [\n  {\n    label: 'Yes',\n    value: 'true',\n  },\n  {\n    label: 'No',\n    value: 'false',\n  },\n];\n\nconst EXAMPLE_PERSONAL: FormField[] = [\n  {\n    type: 'text',\n    name: 'name',\n    label: 'Full Name',\n    required: true,\n    placeholder: 'Full Name',\n  },\n  {\n    type: 'email',\n    name: 'email',\n    label: 'Email',\n    required: true,\n    placeholder: 'Email',\n  },\n  {\n    type: 'tel',\n    name: 'phone',\n    label: 'Phone Number',\n    placeholder: 'Phone Number',\n  },\n  {\n    type: 'text',\n    name: 'address',\n    label: 'Address',\n    placeholder: 'Address',\n  },\n  {\n    type: 'text',\n    name: 'postal',\n    label: 'Postal Code',\n    required: true,\n    placeholder: 'Postal Code',\n    shortStyle: true,\n  },\n  {\n    type: 'checkbox',\n    name: 'languages',\n    label: 'Languages spoken with conversational proficiency',\n    options: [\n      {\n        label: 'English',\n        value: 'english',\n      },\n      {\n        label: 'French',\n        value: 'french',\n      },\n    ],\n  },\n];\n\nconst EXAMPLE_VOLUNTEERING: FormField[] = [\n  {\n    type: 'checkbox',\n    name: 'offer',\n    label: 'What I would like to do:',\n    required: true,\n    options: [\n      {\n        label: 'Run grocery shopping errands',\n        value: 'grocery',\n      },\n      {\n        label: 'Make phone calls to elderly people',\n        value: 'phone',\n      },\n      {\n        label: 'Take someone to vaccination appointment',\n        value: 'vaccine',\n      },\n      {\n        label: 'Participate in Walk & Talk Program',\n        value: 'walk&talk',\n      },\n      {\n        label: 'Participate in Wise Connections seniors tech training program',\n        value: 'tech',\n      },\n    ],\n  },\n  {\n    type: 'number',\n    name: 'time',\n    label: 'Time commitment per week (approximate):',\n    placeholder: 'Hours',\n    shortStyle: true,\n  },\n  {\n    type: 'radio',\n    name: 'license',\n    label: \"Do you have access to a vehicle and/or have a driver's license?\",\n    options: [\n      {\n        label: 'I have a car and a license',\n        value: 'carlicense',\n      },\n      {\n        label: 'I have another vehicle type and a license',\n        value: 'otherlicense',\n      },\n      {\n        label: 'I have a license but no vehicle',\n        value: 'license',\n      },\n      {\n        label: 'I have a bike',\n        value: 'bike',\n      },\n      {\n        label: 'I do not have a vehicle or license',\n        value: 'none',\n      },\n    ],\n  },\n];\n\nconst EXAMPLE_HEALTH: FormField[] = [\n  {\n    type: 'radio',\n    name: 'covid',\n    label:\n      'Are you currently sick with COVID-19 or experiencing any COVID-19 symptoms?',\n    required: true,\n    options: YES_NO_OPTIONS,\n  },\n  {\n    type: 'radio',\n    name: 'contactedCovid',\n    label:\n      'Have you been in close contact with someone with COVID-19 or someone who may have COVID-19?',\n    required: true,\n    options: YES_NO_OPTIONS,\n  },\n  {\n    type: 'radio',\n    name: 'travelledCovid',\n    label:\n      'Have you travelled abroad in the past two weeks or been in close contact with someone who has?',\n    required: true,\n    options: YES_NO_OPTIONS,\n  },\n];\n\nexport const VOLUNTEER_FORM: FormSection[] = [\n  {\n    id: 'personal-info',\n    label: 'Personal Information',\n    formFields: EXAMPLE_PERSONAL,\n  },\n  {\n    id: 'volunteering-info',\n    label: 'Volunteering Information',\n    formFields: EXAMPLE_VOLUNTEERING,\n  },\n  {\n    id: 'health-info',\n    label: 'COVID-19 Health Information',\n    formFields: EXAMPLE_HEALTH,\n  },\n];\n\nexport const VOLUNTEER_SCHEMA = Yup.object().shape({\n  name: Yup.string().required('Please enter your name'),\n  email: Yup.string()\n    .required('Please enter your email')\n    .email('Please enter a valid email'),\n  phone: Yup.string(),\n  address: Yup.string(),\n  postal: Yup.string()\n    .required('Please enter a Postal code or Zip code')\n    .matches(\n      /[a-zA-Z][0-9][a-zA-Z] ?[a-zA-Z][0-9][a-zA-Z]|([a-zA-Z]{2})?[0-9]{5}/,\n      'Please enter a valid Postal code or Zip code',\n    ),\n  // eslint-disable-next-line react/forbid-prop-types\n  languages: Yup.array(),\n  offer: Yup.array().min(1, 'Please check at least one option'),\n  time: Yup.number().min(0).max(168),\n  license: Yup.string(),\n  covid: Yup.string().required('Please select an option'),\n  contactedCovid: Yup.string().required('Please select an option'),\n  travelledCovid: Yup.string().required('Please select an option'),\n});\n\nexport const VOLUNTEER_INITAL_VALUES = {\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n  postal: '',\n  languages: [],\n  offer: [],\n  time: '',\n  license: '',\n  covid: '',\n  contactedCovid: '',\n  travelledCovid: '',\n};\n","export const textFieldSet = new Set([\n  'color',\n  'date',\n  'datetime-local',\n  'email',\n  'month',\n  'number',\n  'password',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n]);\n\nexport const checkRadioFieldSet = new Set(['checkbox', 'radio']);\n\nexport const multiFieldSet = new Set(['checkbox']);\n\nexport interface FieldOption {\n  label: string;\n  value: string;\n  default?: boolean;\n}\n\nexport type FormField = {\n  type: string;\n  name: string;\n  label: string;\n  options?: FieldOption[];\n  placeholder?: string | number;\n  required?: boolean;\n  shortStyle?: boolean;\n};\n\nexport interface FormSection {\n  id: string;\n  label: string;\n  formFields: FormField[];\n}\n","/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport Style from '../formikStyle.module.css';\nimport { FormField } from '../types';\n\ninterface Props {\n  formField: FormField;\n}\n\nfunction CheckRadioFieldComponent(props: Props) {\n  const { formField } = props;\n  return (\n    <fieldset>\n      <legend className={formField.required ? Style.requiredLabel : ''}>\n        {formField.label}\n      </legend>\n      <div className={Style.optionList}>\n        {formField.options?.map((option) => (\n          <label key={option.value}>\n            <div className={Style.option}>\n              <Field\n                type={formField.type}\n                name={formField.name}\n                value={option.value}\n              />\n              <span>{option.label}</span>\n            </div>\n          </label>\n        ))}\n      </div>\n      <div className={Style.errorMessage}>\n        <ErrorMessage name={formField.name} />\n      </div>\n    </fieldset>\n  );\n}\n\nexport default CheckRadioFieldComponent;\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport Style from '../formikStyle.module.css';\nimport { FormField } from '../types';\n\ninterface Props {\n  formField: FormField;\n}\n\nfunction TextFieldComponent(props: Props) {\n  const { formField } = props;\n  return (\n    <label>\n      <span className={formField.required ? Style.requiredLabel : ''}>\n        {formField.label}\n      </span>\n      <span\n        className={formField.shortStyle ? Style.shortInput : Style.longInput}\n      >\n        <Field\n          type={formField.type}\n          name={formField.name}\n          placeholder={formField.placeholder}\n        />\n      </span>\n      <div className={`${Style.errorMessage} ${Style.textInput}`}>\n        <ErrorMessage name={formField.name} />\n      </div>\n    </label>\n  );\n}\n\nexport default TextFieldComponent;\n","import React from 'react';\nimport { textFieldSet, checkRadioFieldSet, FormField } from '../types';\n\nimport CheckRadioFieldComponent from './CheckRadioFieldComponent';\nimport TextFieldComponent from './TextFieldComponent';\n\ninterface Props {\n  formField: FormField;\n}\n\nfunction FieldComponent(props: Props) {\n  const { formField } = props;\n\n  if (textFieldSet.has(formField.type)) {\n    return <TextFieldComponent formField={formField} />;\n  }\n  if (checkRadioFieldSet.has(formField.type)) {\n    return <CheckRadioFieldComponent formField={formField} />;\n  }\n  return null;\n}\n\nexport default FieldComponent;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { AnyObject } from 'yup/lib/types';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport Style from './formikStyle.module.css';\nimport FieldComponent from './fieldComponents/FieldComponent';\nimport { FormSection } from './types';\n\ninterface Props {\n  formSections: FormSection[];\n  initialValues: Record<string, unknown>;\n  schema: Yup.ObjectSchema<AnyObject>;\n}\n\nfunction FormikComponent(props: Props) {\n  const { formSections, initialValues, schema } = props;\n  const history = useHistory();\n\n  return (\n    <div className={Style.formikForm}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values);\n          history.push('/submitted');\n          setSubmitting(false);\n        }}\n      >\n        <Form>\n          {formSections.map((formSection) => (\n            <div key={formSection.id} className={Style.formField}>\n              <h2 className={Style.formFieldHeader}>{formSection.label}</h2>\n              <div>\n                {formSection.formFields.map((formField) => (\n                  <FieldComponent key={formField.name} formField={formField} />\n                ))}\n              </div>\n            </div>\n          ))}\n          <button type=\"submit\" className={Style.submit}>\n            Submit\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default FormikComponent;\n","import React from 'react';\nimport {\n  VOLUNTEER_FORM,\n  VOLUNTEER_INITAL_VALUES,\n  VOLUNTEER_SCHEMA,\n} from './VolunteerFormData';\nimport FormikComponent from '../formik/FormikComponent';\n\nfunction VolunteerFormComponent() {\n  /**\n   * Gets the form field data from the back end\n   * TODO: complete the function\n   */\n  const getData = () => ({\n    form: VOLUNTEER_FORM,\n    initialValues: VOLUNTEER_INITAL_VALUES,\n    schema: VOLUNTEER_SCHEMA,\n  });\n\n  const { form: formSections, initialValues, schema } = getData();\n\n  return (\n    <>\n      <h1>Volunteer Application Form</h1>\n      <p>\n        Thank you for your interest in volunteering for us! Please fill out our\n        volunteer form so we can start matching you with tasks.\n      </p>\n      <FormikComponent\n        formSections={formSections}\n        initialValues={initialValues}\n        schema={schema}\n      />\n    </>\n  );\n}\n\nexport default VolunteerFormComponent;\n","import React from 'react';\nimport Style from './FormSuccess.module.css';\n\nfunction FormSubmitted() {\n  return (\n    <div className={Style.body}>\n      <div className={Style.p}>\n        <div className={Style.box}>\n          <div className={Style.checkmarkCircle}>\n            <i className={Style.checkmark}>✓</i>\n          </div>\n          <h1>Success</h1>\n          <p>Your form has been submitted successfully.</p>\n          <p>We wo;; be in touch shortly!</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormSubmitted;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomeComponent from './components/HomeComponent';\nimport ProgramListComponent from './components/program/ProgramListComponent';\nimport RequestListComponent from './components/request/RequestListComponent';\nimport RequestCreateComponent from './components/request/RequestCreateComponent';\nimport StageListComponent from './components/stage/StageListComponent';\n\nimport './globals.css';\nimport NavBarFunc from './NavBarFunc';\nimport VolunteerFormComponent from './components/volunteer/VolunteerFormComponent';\nimport FormSubmitted from './components/formik/FormSuccess';\n// import ProgramRequestSelection from './components/request/RequestProgramSelection';\n\nfunction App() {\n  const NavBar = NavBarFunc();\n  // console.log(NavBar)\n  // TODO: rethink lines for request/list with multiple parameters - combine?\n\n  return (\n    <div>\n      <nav className=\"navbar\">\n        <NavBar />\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path=\"/\" component={HomeComponent} />\n          <Route\n            path=\"/request/list/:programCode/:stageCode\"\n            component={RequestListComponent}\n          />\n          <Route\n            path=\"/request/list/:programCode\"\n            component={RequestListComponent}\n          />\n          {/* <Route exact path=\"/request/list\" component={ProgramRequestSelection} /> */}\n          <Route\n            exact\n            path=\"/request/list\"\n            component={RequestCreateComponent}\n          />\n          {/* <Route exact path=\"/request/create\" component={RequestCreateComponent} /> */}\n          <Route exact path=\"/program/list\" component={ProgramListComponent} />\n          <Route exact path=\"/stage/list\" component={StageListComponent} />\n          {/* <Route exact path=\"/beneficiaries/list\" component={BeneficiariesComponent} /> */}\n          <Route\n            exact\n            path=\"/volunteer/list\"\n            component={VolunteerFormComponent}\n          />\n          <Route exact path=\"/submitted\">\n            {' '}\n            <FormSubmitted />\n            {' '}\n          </Route>\n          <Route component={HomeComponent} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable comma-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"getSupport\":\"requestStyle_getSupport__lewkZ\",\"informationCategory\":\"requestStyle_informationCategory__1Rfov\",\"personalDetails\":\"requestStyle_personalDetails__1WViV\",\"healthDetails\":\"requestStyle_healthDetails__31Ej4\",\"BeneficiariesTextLabel\":\"requestStyle_BeneficiariesTextLabel__1RAQL\",\"BeneficiariesTextInput\":\"requestStyle_BeneficiariesTextInput__Lderi\",\"zipcodeInput\":\"requestStyle_zipcodeInput__3IGaR\",\"submit\":\"requestStyle_submit__6RSjA\",\"inactiveSubmit\":\"requestStyle_inactiveSubmit__WB9_8\",\"stepWrapper\":\"requestStyle_stepWrapper__1ynau\",\"stepWrapperItem\":\"requestStyle_stepWrapperItem__37iqN\",\"stepWrapperItemStep\":\"requestStyle_stepWrapperItemStep__3v-Hj\",\"stepWrapperItemTitle\":\"requestStyle_stepWrapperItemTitle__1YnhQ\",\"activeItemStep\":\"requestStyle_activeItemStep__hw2YE\",\"activeItemTitle\":\"requestStyle_activeItemTitle__wt4ep\",\"radioButtonsWrapper\":\"requestStyle_radioButtonsWrapper__1KxT8\",\"radioButton\":\"requestStyle_radioButton__1iBft\",\"activeRadioButton\":\"requestStyle_activeRadioButton__8niOX\",\"inputTitle\":\"requestStyle_inputTitle__3lQ2C\",\"checkBoxDivs\":\"requestStyle_checkBoxDivs__3e3E2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"FormSuccess_body__3Jh5j\",\"p\":\"FormSuccess_p__2RAt5\",\"checkmark\":\"FormSuccess_checkmark__3JUrl\",\"box\":\"FormSuccess_box__2BlrG\",\"checkmarkCircle\":\"FormSuccess_checkmarkCircle__1W6F1\"};"],"sourceRoot":""}